<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd">
    <!--redis连接池配置 类似数据库连接池-->
    <bean class="redis.clients.jedis.JedisPoolConfig" id="poolConfig">
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="maxTotal" value="${redis.maxActive}"/>
        <property name="maxWaitMillis" value="${redis.maxWait}"/>
        <property name="testOnBorrow" value="true"/>
    </bean>
    <!--spring-data-redis 2.0以上的配置-->
    <bean id="redisPassword" class="org.springframework.data.redis.connection.RedisPassword">
        <constructor-arg name="thePassword" value="${redis.pass}"></constructor-arg>
    </bean>
    <bean id="standaloneConfiguration" class="org.springframework.data.redis.connection.RedisStandaloneConfiguration">
        <property name="hostName" value="${redis.host}"/>
        <property name="database" value="${redis.dbIndex}"/>
        <property name="password" ref="redisPassword"/>
        <property name="port" value="${redis.port}"/>
    </bean>
    <!--配置jedis链接工厂 spring-data-redis2.0中
        建议改为构造器传入一个RedisStandaloneConfiguration  单机
                            RedisSentinelConfiguration  主从复制
                            RedisClusterConfiguration  集群-->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <constructor-arg name="standaloneConfig" ref="standaloneConfiguration"></constructor-arg>
    </bean>

    <!--手动设置 key  与 value的序列化方式-->
    <bean id="keySerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
    <bean id="valueSerializer" class="com.alibaba.fastjson.support.spring.FastJsonRedisSerializer">
        <constructor-arg name="type" value="java.lang.Object" />
    </bean>

    <!--配置jedis模板  -->
    <!--这是<object,object>模板-->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="keySerializer" ref="valueSerializer"/>
        <property name="valueSerializer" ref="valueSerializer"/>
        <property name="hashKeySerializer" ref="valueSerializer"/>
        <property name="hashValueSerializer" ref="valueSerializer"/>
        <!--开启事务-->
        <property name="enableTransactionSupport" value="true"/>
    </bean>
    <!--也可以StringRedisTemplate  专注于String的操作  -->
    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <!--<property name="connectionFactory" ref="jedisConnectionFactory"></property>-->
        <!--在StringRedisTemplate与redisTemplate不同,可以直接造构造器中传入ConnectionFactory-->
        <constructor-arg name="connectionFactory" ref="jedisConnectionFactory"></constructor-arg>
        <property name="keySerializer" ref="keySerializer"/>
        <property name="valueSerializer" ref="valueSerializer"/>
        <property name="hashKeySerializer" ref="keySerializer"/>
        <property name="hashValueSerializer" ref="valueSerializer"/>
        <!--开启事务-->
        <property name="enableTransactionSupport" value="true"/>
    </bean>

    <!--配置redis缓存管理器-->
    <!--开启缓存注解-->
    <cache:annotation-driven cache-manager="cacheManager" />
    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <!--可以配置多个cache组件-->
            <set>
                <bean class="com.lang.blog.component.RedisCache">
                    <property name="redisTemplate" ref="stringRedisTemplate" />
                    <property name="name" value="common" />
                </bean>
            </set>
        </property>
    </bean>
</beans>